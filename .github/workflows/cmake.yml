name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Dependencies
      run: |
        wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
        sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.231-jammy.list https://packages.lunarg.com/vulkan/1.3.231/lunarg-vulkan-1.3.231-jammy.list
        sudo apt update
        sudo apt install vulkan-sdk
        sudo apt install libsdl2-dev

    - name: Build Engine
      run: |
        git submodule update --init Library/WickedEngine
        cd Library/WickedEngine/
        mkdir build
        cd build
        cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DWICKED_DYNAMIC_LIBRARY=ON
        cmake --build . --target WickedEngine_Linux --config Release

    - name: Build Library (reproc++)
      run: |
        mkdir -p 'build/Install'
        git submodule update --init Library/reproc
        cd Library/reproc/
        cmake -B build -DREPROC++=ON -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        cmake --build build --config Release
        cmake --install build --prefix "${GITHUB_WORKSPACE}/build/Install"

    - name: Build Library (efsw)
      run: |
        git submodule update --init Library/efsw

    - name: Build Game and Dev Tool
      run: |
        mkdir -p 'Data/Shader'
        mkdir -p 'Data/Content'
        cmake -B build -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DWickedEngine_DIR=Library/WickedEngine/build/cmake
        cmake --build build -j$(nproc)

    - name: Prepare Package
      run: |
        mv 'build/libWickedEngine_Linux.so' './'
        mv 'build/libdxcompiler.so' './'
        mv 'build/libGameplay.so' './'
        mv 'build/libGameplay_DEV.so' './'
        mv 'build/Dev' './'
        mv 'build/Game' './'

    - name: Package Programs
      uses: actions/upload-artifact@v2
      with:
        name: Binary (Linux - Ubuntu)
        path: |
          Data/
          libWickedEngine_Linux.so
          libdxcompiler.so
          libefsw.so
          Dev
          Game
          libGameplay.so
          libGameplay_DEV.so
  
  Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Build Engine
      run: |
        git submodule update --init Library/WickedEngine
        cd Library\WickedEngine\
        mkdir build
        cd build
        cmake ..
        cmake --build . --target WickedEngine_Windows --config Release

    - name: Build Library (reproc++)
      run: |
        mkdir -p 'build/Install'
        git submodule update --init Library/reproc
        cd Library/reproc/
        cmake -B build -DREPROC++=ON
        cmake --build build --config Release
        cmake --install build --prefix "$env:GITHUB_WORKSPACE/build/Install"

    - name: Build Library (efsw)
      run: |
        git submodule update --init Library/efsw

    - name: Build Game and Dev Tool
      run: |
        cmake -B build -DWickedEngine_DIR=Library/WickedEngine/Build/cmake
        cmake --build build --config Release

    - name: Prepare Package
      run: |
        mkdir -p 'Data\Content'
        move "Library\WickedEngine\WickedEngine\shaders" "Data\Shader"
        move "Library\WickedEngine\WickedEngine\dxcompiler.dll" "dxcompiler.dll"
        move "Library\WickedEngine\WickedEngine\dxil.dll" "dxil.dll"
        move "build\Library\efsw\Release\efsw.dll" "efsw.dll"
        move "build\Release\Dev.exe" "Dev.exe"
        move "build\Release\Game.exe" "Game.exe"

    - name: Package Programs
      uses: actions/upload-artifact@v2
      with:
        name: Binary (Windows)
        path: |
          Data\
          dxcompiler.dll
          dxil.dll
          efsw.dll
          Dev.exe
          Game.exe
          Gameplay.dll
          Gameplay_DEV.dll

        
      
